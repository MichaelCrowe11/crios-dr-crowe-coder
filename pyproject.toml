[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crios"
version = "1.0.0"
description = "CriOS Discovery Engine - Universal Compound Discovery Platform with Ethical AI"
authors = [
    {name = "Dr. Michael Crowe", email = "michael@crowelogic.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core cheminformatics
    "rdkit>=2023.9.1",
    
    # Data processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "polars>=0.20.0",
    "pyarrow>=14.0.0",
    
    # Configuration and validation
    "pydantic>=2.5.0",
    "pyyaml>=6.0.0",
    
    # CLI and UI
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "textual>=0.41.0",
    
    # Web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "jinja2>=3.1.0",
    "httpx>=0.25.0",
    
    # Scientific computing
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    "joblib>=1.3.0",
    
    # Utilities
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.11.0",
    "hypothesis>=6.82.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "bandit>=1.7.5",
]

# Documentation
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.23.0",
    "mkdocs-jupyter>=0.24.0",
]

# High-performance computing
ray = [
    "ray[default]>=2.8.0",
]

# Jupyter notebook support
notebook = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

# All optional dependencies
all = [
    "crios[dev,docs,ray,notebook]",
]

[project.urls]
Homepage = "https://github.com/michaelcrowe11/crios"
Documentation = "https://crios.readthedocs.io"
Repository = "https://github.com/michaelcrowe11/crios"
Issues = "https://github.com/michaelcrowe11/crios/issues"
Changelog = "https://github.com/michaelcrowe11/crios/blob/main/CHANGELOG.md"

[project.scripts]
crios = "crios.cli.main:app"

[project.entry-points."crios.engines"]
synthetic = "crios.engines.synthetic:SyntheticEngine"
neuro = "crios.engines.neuro:NeuroEngine"
natural = "crios.engines.natural:NaturalEngine"

[tool.setuptools.packages.find]
where = ["."]
include = ["crios*"]

[tool.setuptools.package-data]
crios = [
    "data/**/*",
    "configs/**/*", 
    "ide/static/**/*",
    "ide/templates/**/*",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["crios"]
known_third_party = ["rdkit", "numpy", "pandas", "typer", "rich", "fastapi", "pydantic"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "rdkit.*",
    "scipy.*",
    "sklearn.*",
    "ray.*",
    "polars.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config", 
    "--cov=crios",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-x",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "rdkit: marks tests requiring RDKit",
    "ethics: marks tests for ethics/safety functionality",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:rdkit.*",
]

[tool.coverage.run]
source = ["crios"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "except ImportError:",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection for testing

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]